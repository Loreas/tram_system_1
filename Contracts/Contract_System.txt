Operation Contract System:
==============================

+Constructor():
//Creeert een nieuw systeem object.
//Pre:
//Post: Er is een nieuw systeem object aangemaakt en voor alle member variables wordt een standaard waarde toegekend.

++ProperlyInitialized(out succes: bool):
 //Geeft een bool terug voor een juist geinitializeerd object.
 //Pre: Er bestaat een systeem object.
 //Post: Geeft true terug wanneer het object correct is geinitialiseerd, zo niet geeft de functie false terug.

+getStations(out map<string, Station*> stations):
//Geeft een map van stations terug. De map bevat een string key die de naam van het Station object bevat.
//Pre: Er bestaat een map van Station objecten.
//Post: Indien de map bestaat wordt deze teruggegeven.

+getTrams(out map<int, Tram*> trams):
//Geeft een map van trams terug. De map bevat een integer key die de naam van het Tram object bevat.
//Pre: Er bestaat een map van Tram objecten.
//Post: Indien de map bestaat wordt deze teruggegeven.

+addStation(in naam:string ; in station:Station object):
//Voegt een Station object toe aan de map "stations" aan de hand van een string key, die de naam bevat.
//Pre: Er bestaat een string en een Station object om toe te voegen aan de map.
//Post: Het Station object is correct toegevoegd aan de map volgens de opgegeven key.

+addTram(in LijnNr:integer ; in tram:Tram object):
//Voegt een Tram object toe aan de map "trams" aan de hand van een integer LijnNr, die het lijnnummer bevat.
//Pre: Er bestaat een integer en een Tram object om toe te voegen aan de map.
//Post: Het Tram object is correct toegevoegd aan de map volgens de opgegeven key.

+parserOutput(out output:string):
//Geeft een string terug die de output van het ingelezen XML-bestand bevat.
//Pre: Er is een XML-bestand ingelezen door de parser-functie in Parser.cpp.
//Post: De output string wordt correct teruggegeven.

+verplaatsTram(in spoorNr:integer ; in stationsNaam: string ; out success: boolean):
//Het huidige station van een Tram object wordt veranderd naar het volgende station.
//Pre: Er bestaat een Tram object met een huidig en een volgend station
//Post: Het huidige station is correct veranderd en de output string die de verandering bevat wordt teruggegeven.

+legalInput(in input:string ; out success: boolean):
//Controleert of de input geen lege string is.
//Pre: Er bestaat een inputstring.
//Post: Indien de string niet leeg is, wordt er true teruggegeven. Indien de string leeg is, wordt er false teruggegeven.

+Valid_circuit(out success: boolean):
//Controleert of het circuit geldig is.
//Pre: Er bestaat een systeem.
//Post: Indien het een geldig circuit is, wordt er true teruggegeven. Indien het een ongeldig circuit is,
//wordt er false teruggegeven.

+propelyparsed():
//Controleert of het systeem juist geinitialiseerd is.
//Pre: Er bestaat een systeem.
//Post: Indien er een fout is, wordt het programma gestopt.

//ronde_rijden(out output: string):
//Laat elke tram elk station in een ronde bezoeken tot het huidigstation weer het beginstation is.
//Pre: Er bestaat een geldig system.
//Post: De tram(s) heeft/hebben een volledige ronden gereden. De outputstring wordt teruggegeven.